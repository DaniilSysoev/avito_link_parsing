import requests
import os
from dotenv import load_dotenv
from avito_parsing import AvitoItem
from datetime import datetime


load_dotenv()

class TelegramAlert:
    def __init__(self):
        self.token = os.getenv('TELEGRAM_BOT_TOKEN')
        self.chat_id = os.getenv('TELEGRAM_CHAT_ID')
        self.base_url = f'https://api.telegram.org/bot{self.token}/sendMessage'
    
    def send_alert(self, item: AvitoItem):
        message = (
            f"üè∑ *{item.title}*\n"
            f"üíµ *–¶–µ–Ω–∞:* {item.price}\n"
            f"üìç *–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:* {item.location}\n"
            f"üìÖ *–î–∞—Ç–∞:* {item.date}\n"
            f"\n{item.description[:200]}...\n"
            f"[–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ]({item.url})"
        )
        
        payload = {
            'chat_id': self.chat_id,
            'text': message,
            'parse_mode': 'Markdown',
            'disable_web_page_preview': False
        }
        
        response = requests.post(self.base_url, data=payload)
        return response.json()
    
    def send_no_results_alert(self, search_url: str):
        message = (
            f"üîç *–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –ø–æ–∏—Å–∫–∞*\n"
            f"–°—Å—ã–ª–∫–∞: {search_url}\n"
            f"–í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {datetime.now().strftime('%Y-%m-%d %H:%M')}"
        )
        
        payload = {
            'chat_id': self.chat_id,
            'text': message,
            'parse_mode': 'Markdown'
        }
        
        requests.post(self.base_url, data=payload)